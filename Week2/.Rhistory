install.packages('devtools')
version
install.packages('Echarts4r')
install.packages('echarts4r')
q()
install.packages('library(lubridate)
install.packages('library(lubridate)
install.packages('lubridate')
quit()
library(dplyr)
library(ggplot2)
# Import datasets
Training_Data <- read.csv('https://insidesherpa.s3.amazonaws.com/vinternships/companyassets/SKZxezskWgmFjRvj9/ml_case_training_data.csv')
Pricing_Data <- read.csv('https://insidesherpa.s3.amazonaws.com/vinternships/companyassets/SKZxezskWgmFjRvj9/ml_case_training_hist_data.csv')
Training_output_Data <- read.csv('https://insidesherpa.s3.amazonaws.com/vinternships/companyassets/SKZxezskWgmFjRvj9/ml_case_training_output.csv')
# A Look into the datasets
head(Training_Data)
head(Pricing_Data)
library(dplyr)
library(dplyr)
library(ggplot2)
# Import datasets
Training_Data <- read.csv('https://cdn.theforage.com/vinternships/companyassets/SKZxezskWgmFjRvj9/ml_case_training_data.csv')
Pricing_Data <- read.csv('https://cdn.theforage.com/vinternships/companyassets/SKZxezskWgmFjRvj9/ml_case_training_hist_data.csv')
Training_output_Data <- read.csv('https://cdn.theforage.com/vinternships/companyassets/SKZxezskWgmFjRvj9/ml_case_training_output.csv')
# A Look into the datasets
head(Training_Data)
head(Training_output_Data)
colnames(Training_Data)
summary(Training_Data)
summary(Training_output_Data)
Data <- merge(Training_Data, Training_output_Data, by = 'id')
summary(Data)
countNA <- Data %>% summarize_all(funs(sum(is.na(.)) / length(.)*100))
countNA <-t(countNA)
countNA
Data <- Data[,which(colMeans(!is.na(Data))>0.30)]
Data <- Data[complete.cases(Data),]
sum(is.na(Data))
summary(Data)
#  A Look into Pricing Data
head(Pricing_Data)
Pricing_Data <- Pricing_Data[complete.cases(Pricing_Data),]
glimpse(Pricing_Data)
head(Data$activity_new)
summary(Data$date_first_activ)
colnames(Data)
ggplot(Data, aes(x=churn))+
geom_count()
ggplot(Data, aes(x=churn, y = count))+
geom_count()
ggplot(Data, aes(x=churn, y = count))+
geom_bar()
ggplot(Data, aes(x=churn)+
)
geom_bar()
ggplot(Data, aes(x=churn))+
geom_bar()
dataset(iris)
data = data(iris)
head(data)
data = dataset(iris)
library(dataset)
iris
data = iris
head(iris)
corr.test(iris['Sepal.Length'], iris[
'Sepal.Width'], method = 'spearman')
[A
quit()
plot(iris$Sepal.Length, iris$Sepal.Width)
barplot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width)
URL <- "https://cdn.rawgit.com/christophergandrud/networkD3/master/JSONdata/energy.json"
Energy <- jsonlite::fromJSON(URL)
head( Energy$links )
head( Energy$nodes )
p
p <- sankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
library(networkD3)
library(networkD3)
library(networkD3)
nstall.packages('networkD3')
install.packages('networkD3')
library(networkD3)
URL <- "https://cdn.rawgit.com/christophergandrud/networkD3/master/JSONdata/energy.json"
Energy <- jsonlite::fromJSON(URL)
head( Energy$links )
head( Energy$nodes )
p <- sankeyNetwork(Links = Energy$links, Nodes = Energy$nodes, Source = "source",
Target = "target", Value = "value", NodeID = "name",
units = "TWh", fontSize = 12, nodeWidth = 30)
p
install.packages(c("brio", "bslib", "colorspace", "corrplot", "curl", "devtools", "dplyr", "gh", "gt", "httpuv", "insight", "ipmisc", "IRkernel", "jquerylib", "knitr", "later", "openssl", "rmarkdown", "sass", "stringi", "viridis"))
version
RStudio.Version()
RStudio.Version()
RStudio.Version()
ggplot2::ggplot()
ggplot2::ggplot(car)
shiny::runApp('Personal not your shit/H./Online Classes/Projects/Economics/Yield Curve/Yield_Curve_Today_India')
runApp('Personal not your shit/H./Online Classes/Projects/Economics/Yield Curve/Yield_Curve_Today_India')
runApp('Personal not your shit/H./Online Classes/Projects/Economics/Yield Curve/Yield_Curve_Today_India')
runApp('Personal not your shit/H./Online Classes/Projects/Economics/Yield Curve/Yield_Curve_Today_India')
runApp('Personal not your shit/H./Online Classes/Projects/Economics/Yield Curve/Yield_Curve_Today_India')
Sys.time()
Sys.Date()
runApp('Personal not your shit/H./Online Classes/Projects/Economics/Yield Curve/Yield_Curve_Today_India')
data("iris")
ggplot2::ggplot(data, aes(Species, Sepal.Length))+
geom_point()
ggplot2::ggplot(data, aes(Species, Sepal.Length))+
geom_point()
ggplot2::ggplot(data, aes(Species, Sepal.Length))+
geom_point()
ggplot2::ggplot(data, aes(Species, Sepal.Length))+
geom_point()
library(ggplot2)
ggplot(data, aes(Species, Sepal.Length))+
geom_point()
setwd("~/Personal not your shit/H./Online Classes/R programming/Econometrics/Week2")
library(readxl)
data <- read_xls(paste0(getwd(), 'data/TestExer2-GPA-round2.xls'))
data <- read_xls(paste0(getwd(), '/data/TestExer2-GPA-round2.xls'))
library(readxl)
setwd("~/Personal not your shit/H./Online Classes/R programming/Econometrics/Week2")
data <- read_xls(paste0(getwd(), '/data/TestExer2-GPA-round2.xls'))
library(ggplot2)
library(readxl)
library(ggplot2)
setwd("~/Personal not your shit/H./Online Classes/R programming/Econometrics/Week2")
data <- read_xls(paste0(getwd(), '/data/TestExer2-GPA-round2.xls'))
head(data)
lm(FGPA~SATV, data)
lm(FGPA~SATV, data)
lm(FGPA~SATV+FEM, data)
model <-lm(FGPA~SATV+FEM, data)
summary(model)
model <-lm(FGPA~SATV, data)
summary(model)
model1 <- lm(FGPA~SATV, data)
summary(model1)
model$coefficients
model$xlevels
new_SATV <- data$SATV+1
new_SATV
data$SATV
class(new_SATV)
new_SATV <- data.frame(new_SATV)
class(new_SATV)
colnames(new_SATV) <- 'SATV'
predict(model, new_SATV)
predict_1_up <- predict(model, new_SATV)
predict_1_up <- predict(model, new_SATV, interval = 'confidence')
predict_1_up
new_SATV <- data$SATV+1
new_SATV <- data.frame(new_SATV)
colnames(new_SATV) <- 'SATV'
predict_1_up <- predict(model, new_SATV, interval = 'confidence')
predict_1_up
head(predict_1_up)
model2 <- lm(FGPA~SATV+SATM+FEM, data)
summary(model2)
model2 <- lm(FGPA~SATV+SATM+FEM, data)
summary(model2)
new_SATV <- data$SATV+1
new_SATV <- data.frame(new_SATV)
colnames(new_SATV) <- 'SATV'
predict <- predict(model, new_SATV, interval = 'confidence')
head(predict)
new_dataCombin <- cbind(new_SATV,new_SATM)
new_SATM <- data$SATM+1
new_SATM <- data.frame(new_SATM)
colnames(new_SATM) <- 'SATM'
new_dataCombin <- cbind(new_SATV, new_SATM)
new_dataCombin
new_SATM <- data$SATM+1
new_SATM <- data.frame(new_SATM)
colnames(new_SATM) <- 'SATM'
new_dataCombin <- cbind(new_SATV, new_SATM, data$FEM)
new_dataCombin
dim(new_dataCombin)
dim(data)
new_SATM <- data$SATM+1
new_SATM <- data.frame(new_SATM)
colnames(new_SATM) <- 'SATM'
new_dataCombin <- cbind(new_SATV, new_SATM, data$FEM)
predict <- predict(model2, new_dataCombin, interval = 'coinfidence')
colnames(new_dataCombin)
colnames(new_dataCombin) <- c("SATV","SATM","FEM")
predict <- predict(model2, new_dataCombin, interval = 'coinfidence')
new_SATM <- data$SATM+1
new_SATM <- data.frame(new_SATM)
colnames(new_SATM) <- 'SATM'
new_dataCombin <- cbind(new_SATV, new_SATM, data$FEM)
colnames(new_dataCombin) <- c("SATV","SATM","FEM")
predict <- predict(model2, new_dataCombin, interval = 'confidence')
new_SATM <- data$SATM+1
new_SATM <- data.frame(new_SATM)
colnames(new_SATM) <- 'SATM'
new_dataCombin <- cbind(new_SATV, new_SATM, data$FEM)
colnames(new_dataCombin) <- c("SATV","SATM","FEM")
predict <- predict(model2, new_dataCombin, interval = 'confidence')
head(predict)
corr(data$FGPA, data$SATM)
cor(data$FGPA, data$SATM)
cor(data)
summary(data)
data_copy <- subset(data, select = 'Observation')
data_copy
data_copy <- subset(data, select = -'Observation')
data_copy <- subset(data, select = -('Observation'))
data_copy <- subset(data, select = -c('Observation'))
data_copy <- subset(data, select = c())
colnames(data)
data_copy <- subset(data, select = c("FGPA","SATM","SATV","FEM"))
head(data_copy)
cor(data_copy)
dataCorr <- subset(data, select = c("FGPA","SATM","SATV","FEM"))
cor(dataCorr)
data_copy <- subset(data, select = c("FGPA","SATM","SATV","FEM"))
install.packages('corrplot')
dataCorr <- subset(data, select = c("FGPA","SATM","SATV","FEM"))
cor <-cor(dataCorr)
cor
library(corrplot)
corrplot(cor)
corrplot(cor, type = 'upper')
corrplot(cor, type = 'upper')
corrplot(cor, type = 'upper', tl.srt = 45)
corrplot(cor)
corrplot(cor, type = "lower")
corrplot(cor, type = "lower", tl.col = 'black')
corrplot(cor, type = "lower", tl.col = 'black',
method = 'sqaure')
corrplot(cor, type = "lower", tl.col = 'black',
method = 'square')
corrplot(cor, tl.col = 'black',
method = 'square')
library(corrplot)
corrplot.mixed(cor, tl.col = 'black',
method = 'square', lower.col = 'black')
library(corrplot)
corrplot.mixed(cor)
corrplot.mixed(cor, lower.col = 'black')
library(corrplot)
corrplot.mixed(cor, lower.col = 'black')
library(corrplot)
corrplot.mixed(cor, lower.col = 'black')
library(corrplot)
corrplot.mixed(cor, lower.col = 'black')
library(corrplot)
corrplot.mixed(cor, lower.col = 'black')
